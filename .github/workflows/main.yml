name: CI

on: [push, pull_request]

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  moor:
    name: "moor package"
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: moor
    steps:
      # setup
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
      - name: Install sqlite3 for tests
        run: |
          mkdir sqlite
          cd sqlite
          curl https://sqlite.org/2021/sqlite-autoconf-3350500.tar.gz --output sqlite.tar.gz
          tar zxvf sqlite.tar.gz
          cd sqlite-autoconf-3350500
          ./configure
          make
          sudo make install
          echo "/usr/local/lib" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=`pwd`/.libs" >> $GITHUB_ENV
      - name: Check sqlite3 version
        run: sqlite3 --version
      - run: dart pub upgrade
      # analysis
      - run: dart format -o none --set-exit-if-changed .
        name: dartfmt
      - run: dart analyze --fatal-infos --fatal-warnings
      # build, test and upload coverage
      - run: dart run build_runner build --delete-conflicting-outputs
      - run: dart test #-x background_isolate --coverage=coverage
#      - uses: actions/upload-artifact@v2
#        with:
#          name: moor-coverage-data
#          path: |
#            moor/coverage/
#            moor/.dart_tool/package_config.json
#          retention-days: 1

  moor_generator:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: moor_generator
    steps:
    # setup
    - uses: actions/checkout@v2
    - uses: cedx/setup-dart@v2
    - run: dart pub upgrade
    # analysis
    - run: dart format -o none --set-exit-if-changed .
      name: dartfmt
    - run: dart analyze --fatal-infos --fatal-warnings

  sqlparser:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: sqlparser
    steps:
      # setup
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
      - run: sudo apt-get install -y libsqlite3-dev
        name: Install sqlite3 for tests
      - run: dart pub upgrade
      # analysis
      - run: dart format -o none --set-exit-if-changed .
        name: dartfmt
      - run: dart analyze --fatal-infos --fatal-warnings
      # tests and coverage
      - run: dart test #--coverage=coverage
#      - uses: actions/upload-artifact@v2
#        with:
#          name: sqlparser-coverage-data
#          path: |
#            sqlparser/coverage/
#            sqlparser/.dart_tool/package_config.json
#          retention-days: 1

  misc_integration_tests:
    name: "Integration tests"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
      - run: sudo apt-get install -y libsqlite3-dev
        name: Install sqlite3 for tests
      - run: tool/misc_integration_test.sh

#  upload_coverage:
#    runs-on: ubuntu-20.04
#    needs: [moor, sqlparser]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: cedx/setup-dart@v2
#      - run: dart pub upgrade
#        name: "Setup coverage processor"
#        working-directory: extras/tooling
#      - uses: actions/download-artifact@v2
#        with:
#          name: moor-coverage-data
#          path: moor/
#      - uses: actions/download-artifact@v2
#        with:
#          name: sqlparser-coverage-data
#          path: sqlparser/
#      - run: dart run extras/tooling/bin/coverage.dart
#        name: "Format coverage from raw data"
#      - uses: codecov/codecov-action@v1
#        with:
#          file: lcov.info
